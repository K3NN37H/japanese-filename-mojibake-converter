import e from"./_snowpack/pkg/react.js";import t from"./_snowpack/pkg/react-dom.js";import n from"./ConvertForm.js";function a(){return e.createElement(e.Fragment,null,e.createElement("h1",null,"Japanese Filename Mojibake Converter"),e.createElement("p",null,"Have some files with Japanese names that have been garbled into mojibake? Paste them into the box, hit Submit and they'll be converted to the correct Japanese below."),e.createElement("details",null,e.createElement("summary",null,"Technical Details"),e.createElement("p",null,"This usually happens because the files were named on a Japanese Windows computer using system locale Shift-JIS (technically ",e.createElement("a",{href:"https://en.wikipedia.org/wiki/Code_page_932_(Microsoft_Windows)"},"code page 932"),"). When they're archived into a ZIP, their filenames are also stored as Shift-JIS in the ZIP."),e.createElement("p",null,"The ",e.createElement("cite",null,e.createElement("a",{href:"https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT"},"ZIP specification"))," doesn't have a standardized way to specify the encoding used for the filenames. It only contains a flag to mark if it's in UTF-8 or not."),e.createElement("p",null,"If UTF-8 is not specified, it generally seems to recommend treating it as ",e.createElement("a",{href:"https://en.wikipedia.org/wiki/Code_page_437"},"IBM code page 437")," encoding, as per the originally specified ZIP character encoding back in 1989."),e.createElement("p",null,"Windows (either following this recommendation or using the currently set locale, unknown which) interprets the filenames as code page 437 encoded when unzipping. Since the encoding was actually Shift-JIS, using code page 437 causes the names to come out as garbled mojibake.")),e.createElement(n,null))}t.render(e.createElement(a,null),document.getElementById("root-container"));
